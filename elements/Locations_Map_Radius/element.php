<?php

namespace BreakdanceCustomElements;

use function Breakdance\Elements\c;
use function Breakdance\Elements\PresetSections\getPresetSection;


\Breakdance\ElementStudio\registerElementForEditing(
    "BreakdanceCustomElements\\LocationsMapRadius",
    \Breakdance\Util\getdirectoryPathRelativeToPluginFolder(__DIR__)
);

class LocationsMapRadius extends \Breakdance\Elements\Element
{
    static function uiIcon()
    {
        return 'SquareIcon';
    }

    static function tag()
    {
        return 'div';
    }

    static function tagOptions()
    {
        return [];
    }

    static function tagControlPath()
    {
        return false;
    }

    static function name()
    {
        return 'Locations Map Radius';
    }

    static function className()
    {
        return 'autogenerated-bce-locationsmapradius';
    }

    static function category()
    {
        return 'other';
    }

    static function badge()
    {
        return false;
    }

    static function slug()
    {
        return __CLASS__;
    }

    static function template()
    {
        return file_get_contents(__DIR__ . '/html.twig');
    }

    static function defaultCss()
    {
        return file_get_contents(__DIR__ . '/default.css');
    }

    static function defaultProperties()
    {
        return false;
    }

    static function defaultChildren()
    {
        return false;
    }

    static function cssTemplate()
    {
        $template = file_get_contents(__DIR__ . '/css.twig');
        return $template;
    }

    static function designControls()
    {
        return [];
    }

    static function contentControls()
    {
        return [c(
        "controls",
        "Controls",
        [c(
        "map_pin",
        "Map Pin",
        [],
        ['type' => 'wpmedia', 'layout' => 'vertical', 'mediaOptions' => ['acceptedFileTypes' => ['image'], 'multiple' => false]],
        false,
        false,
        [],
      ), c(
        "default_lat",
        "Default Lat",
        [],
        ['type' => 'number', 'layout' => 'vertical'],
        false,
        false,
        [],
      ), c(
        "default_long",
        "Default Long",
        [],
        ['type' => 'number', 'layout' => 'vertical'],
        false,
        false,
        [],
      ), c(
        "zoom",
        "Zoom",
        [],
        ['type' => 'number', 'layout' => 'vertical'],
        false,
        false,
        [],
      ), c(
        "radius",
        "Radius",
        [],
        ['type' => 'number', 'layout' => 'vertical', 'rangeOptions' => ['min' => 1, 'max' => 50, 'step' => 0.1]],
        false,
        false,
        [],
      ), c(
        "show_radius",
        "Show Radius",
        [],
        ['type' => 'toggle', 'layout' => 'inline'],
        false,
        false,
        [],
      ), c(
        "fill_colour",
        "Fill Colour",
        [],
        ['type' => 'color', 'layout' => 'vertical'],
        false,
        false,
        [],
      ), c(
        "colour",
        "Colour",
        [],
        ['type' => 'color', 'layout' => 'vertical'],
        false,
        false,
        [],
      ), c(
        "opacity",
        "Opacity",
        [],
        ['type' => 'number', 'layout' => 'vertical', 'rangeOptions' => ['min' => 0, 'max' => 1, 'step' => 0.1]],
        false,
        false,
        [],
      ), c(
        "height",
        "Height",
        [],
        ['type' => 'number', 'layout' => 'vertical', 'rangeOptions' => ['min' => 200, 'max' => 1000, 'step' => 10]],
        false,
        false,
        [],
      )],
        ['type' => 'section', 'layout' => 'vertical'],
        false,
        false,
        [],
      )];
    }

    static function settingsControls()
    {
        return [];
    }

    static function dependencies()
    {
        return ['0' =>  ['frontendCondition' => '

function enqueue_leaflet_assets() {
    wp_enqueue_style(
        \'leaflet-css\',
        \'https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\',
        array(),
        \'1.7.1\'
    );

    wp_enqueue_script(
        \'leaflet-js\',
        \'https://unpkg.com/leaflet/dist/leaflet.js\',
        array(),
        \'1.7.1\',
        false
    );

    wp_enqueue_script(
        \'leaflet-geocoder\',
        \'https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js\',
        array(\'leaflet-js\'),
        \'1.0.0\',
        false
    );
}
add_action(\'wp_enqueue_scripts\', \'enqueue_leaflet_assets\');
',],];
    }

    static function settings()
    {
        return ['dependsOnGlobalScripts' => true];
    }

    static function addPanelRules()
    {
        return false;
    }

    static public function actions()
    {
        return false;
    }

    static function nestingRule()
    {
        return ["type" => "final",   ];
    }

    static function spacingBars()
    {
        return false;
    }

    static function attributes()
    {
        return false;
    }

    static function experimental()
    {
        return false;
    }

    static function order()
    {
        return 0;
    }

    static function dynamicPropertyPaths()
    {
        return [];
    }

    static function additionalClasses()
    {
        return false;
    }

    static function projectManagement()
    {
        return false;
    }

    static function propertyPathsToWhitelistInFlatProps()
    {
        return false;
    }

    static function propertyPathsToSsrElementWhenValueChanges()
    {
        return false;
    }
}
